<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: authzed/api/v1alpha1/schema.proto

namespace Authzed\Api\V1alpha1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * WriteSchemaRequest is the required data used to "upsert" the Schema of a
 * Permissions System.
 *
 * Generated from protobuf message <code>authzed.api.v1alpha1.WriteSchemaRequest</code>
 */
class WriteSchemaRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The Schema containing one or more Object Definitions that will be written
     * to the Permissions System.
     *
     * Generated from protobuf field <code>string schema = 1 [json_name = "schema", (.validate.rules) = {</code>
     */
    protected $schema = '';
    /**
     * If specified, the existing revision of object definitions in the schema that must be present for
     * the write to succeed. If the revision specified differs (i.e. the underlying schema has changed),
     * the write call will fail with a FAILED_PRECONDITION error.
     *
     * Generated from protobuf field <code>string optional_definitions_revision_precondition = 2 [json_name = "optionalDefinitionsRevisionPrecondition"];</code>
     */
    protected $optional_definitions_revision_precondition = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $schema
     *           The Schema containing one or more Object Definitions that will be written
     *           to the Permissions System.
     *     @type string $optional_definitions_revision_precondition
     *           If specified, the existing revision of object definitions in the schema that must be present for
     *           the write to succeed. If the revision specified differs (i.e. the underlying schema has changed),
     *           the write call will fail with a FAILED_PRECONDITION error.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Authzed\Api\V1Alpha1\Schema::initOnce();
        parent::__construct($data);
    }

    /**
     * The Schema containing one or more Object Definitions that will be written
     * to the Permissions System.
     *
     * Generated from protobuf field <code>string schema = 1 [json_name = "schema", (.validate.rules) = {</code>
     * @return string
     */
    public function getSchema()
    {
        return $this->schema;
    }

    /**
     * The Schema containing one or more Object Definitions that will be written
     * to the Permissions System.
     *
     * Generated from protobuf field <code>string schema = 1 [json_name = "schema", (.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setSchema($var)
    {
        GPBUtil::checkString($var, True);
        $this->schema = $var;

        return $this;
    }

    /**
     * If specified, the existing revision of object definitions in the schema that must be present for
     * the write to succeed. If the revision specified differs (i.e. the underlying schema has changed),
     * the write call will fail with a FAILED_PRECONDITION error.
     *
     * Generated from protobuf field <code>string optional_definitions_revision_precondition = 2 [json_name = "optionalDefinitionsRevisionPrecondition"];</code>
     * @return string
     */
    public function getOptionalDefinitionsRevisionPrecondition()
    {
        return $this->optional_definitions_revision_precondition;
    }

    /**
     * If specified, the existing revision of object definitions in the schema that must be present for
     * the write to succeed. If the revision specified differs (i.e. the underlying schema has changed),
     * the write call will fail with a FAILED_PRECONDITION error.
     *
     * Generated from protobuf field <code>string optional_definitions_revision_precondition = 2 [json_name = "optionalDefinitionsRevisionPrecondition"];</code>
     * @param string $var
     * @return $this
     */
    public function setOptionalDefinitionsRevisionPrecondition($var)
    {
        GPBUtil::checkString($var, True);
        $this->optional_definitions_revision_precondition = $var;

        return $this;
    }

}

