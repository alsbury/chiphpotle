<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: authzed/api/v1/debug.proto

namespace Authzed\Api\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * DebugInformation defines debug information returned by an API call in a footer when
 * requested with a specific debugging header.
 * The specific debug information returned will depend on the type of the API call made.
 * See the github.com/authzed/authzed-go project for the specific header and footer names.
 *
 * Generated from protobuf message <code>authzed.api.v1.DebugInformation</code>
 */
class DebugInformation extends \Google\Protobuf\Internal\Message
{
    /**
     * check holds debug information about a check request.
     *
     * Generated from protobuf field <code>.authzed.api.v1.CheckDebugTrace check = 1 [json_name = "check"];</code>
     */
    protected $check = null;
    /**
     * schema_used holds the schema used for the request.
     *
     * Generated from protobuf field <code>string schema_used = 2 [json_name = "schemaUsed"];</code>
     */
    protected $schema_used = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Authzed\Api\V1\CheckDebugTrace $check
     *           check holds debug information about a check request.
     *     @type string $schema_used
     *           schema_used holds the schema used for the request.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Authzed\Api\V1\Debug::initOnce();
        parent::__construct($data);
    }

    /**
     * check holds debug information about a check request.
     *
     * Generated from protobuf field <code>.authzed.api.v1.CheckDebugTrace check = 1 [json_name = "check"];</code>
     * @return \Authzed\Api\V1\CheckDebugTrace|null
     */
    public function getCheck()
    {
        return $this->check;
    }

    public function hasCheck()
    {
        return isset($this->check);
    }

    public function clearCheck()
    {
        unset($this->check);
    }

    /**
     * check holds debug information about a check request.
     *
     * Generated from protobuf field <code>.authzed.api.v1.CheckDebugTrace check = 1 [json_name = "check"];</code>
     * @param \Authzed\Api\V1\CheckDebugTrace $var
     * @return $this
     */
    public function setCheck($var)
    {
        GPBUtil::checkMessage($var, \Authzed\Api\V1\CheckDebugTrace::class);
        $this->check = $var;

        return $this;
    }

    /**
     * schema_used holds the schema used for the request.
     *
     * Generated from protobuf field <code>string schema_used = 2 [json_name = "schemaUsed"];</code>
     * @return string
     */
    public function getSchemaUsed()
    {
        return $this->schema_used;
    }

    /**
     * schema_used holds the schema used for the request.
     *
     * Generated from protobuf field <code>string schema_used = 2 [json_name = "schemaUsed"];</code>
     * @param string $var
     * @return $this
     */
    public function setSchemaUsed($var)
    {
        GPBUtil::checkString($var, True);
        $this->schema_used = $var;

        return $this;
    }

}

